//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _REDISCLUSTERTOOL_CLUSTERTOOL_WXCRAFTER_BASE_CLASSES_H
#define _REDISCLUSTERTOOL_CLUSTERTOOL_WXCRAFTER_BASE_CLASSES_H

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/panel.h>
#include <wx/splitter.h>
#include <wx/notebook.h>
#include <wx/imaglist.h>
#include <wx/toolbar.h>
#include <wx/stc/stc.h>
#include <wx/menu.h>
#include <wx/stattext.h>
#include <wx/textctrl.h>
#include <wx/filepicker.h>
#include <wx/spinctrl.h>
#include <wx/checkbox.h>
#include <wx/dialog.h>
#include <wx/button.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

// clang-format on

class MainFrameBaseClass : public wxFrame
{
public:
    enum {
        wxID_DEPLOY = 10001,
    };
protected:
    wxPanel* m_mainPanel;
    wxSplitterWindow* m_splitter127;
    wxPanel* m_splitterPage131;
    wxNotebook* m_notebook121;
    wxPanel* m_panel123;
    wxToolBar* m_toolbar53;
    wxNotebook* m_notebook;
    wxPanel* m_splitterPage135;
    wxStyledTextCtrl* m_stcLog;
    wxMenuBar* m_menuBar;
    wxMenu* File;
    wxMenuItem* m_menuItemNew;
    wxMenuItem* m_menuItemSave;
    wxMenuItem* m_menuItem7;
    wxMenu* Action;
    wxMenuItem* m_menuItemDeploy;
    wxMenuItem* m_menuItemExecute;
    wxMenuItem* m_menuItem113;
    wxMenuItem* m_menuItem115;
    wxMenu* Help;
    wxMenuItem* m_menuItem9;

protected:
    virtual void OnNewCluster(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSave(wxCommandEvent& event) { event.Skip(); }
    virtual void OnSaveUI(wxUpdateUIEvent& event) { event.Skip(); }
    virtual void OnExit(wxCommandEvent& event) { event.Skip(); }
    virtual void OnDeploy(wxCommandEvent& event) { event.Skip(); }
    virtual void OnRunInstances(wxCommandEvent& event) { event.Skip(); }
    virtual void OnPreferences(wxCommandEvent& event) { event.Skip(); }
    virtual void OnAbout(wxCommandEvent& event) { event.Skip(); }

public:
    wxToolBar* GetToolbar53() { return m_toolbar53; }
    wxNotebook* GetNotebook() { return m_notebook; }
    wxPanel* GetPanel123() { return m_panel123; }
    wxNotebook* GetNotebook121() { return m_notebook121; }
    wxPanel* GetSplitterPage131() { return m_splitterPage131; }
    wxStyledTextCtrl* GetStcLog() { return m_stcLog; }
    wxPanel* GetSplitterPage135() { return m_splitterPage135; }
    wxSplitterWindow* GetSplitter127() { return m_splitter127; }
    wxPanel* GetMainPanel() { return m_mainPanel; }
    wxMenuBar* GetMenuBar() { return m_menuBar; }
    MainFrameBaseClass(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("My Frame"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(600,500), long style = wxCAPTION|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxSYSTEM_MENU|wxCLOSE_BOX);
    virtual ~MainFrameBaseClass();
};


class ClusterPageBase : public wxPanel
{
protected:
    wxStaticText* m_staticText23;
    wxTextCtrl* m_textCtrlName;
    wxStaticText* m_staticText27;
    wxDirPickerCtrl* m_dirPicker;
    wxStaticText* m_staticText31;
    wxSpinCtrl* m_spinCtrlPort;
    wxStaticText* m_staticText35;
    wxSpinCtrl* m_spinCtrl37;
    wxCheckBox* m_checkBox45;
    wxCheckBox* m_checkBoxProtectedMode;

protected:

public:
    wxStaticText* GetStaticText23() { return m_staticText23; }
    wxTextCtrl* GetTextCtrlName() { return m_textCtrlName; }
    wxStaticText* GetStaticText27() { return m_staticText27; }
    wxDirPickerCtrl* GetDirPicker() { return m_dirPicker; }
    wxStaticText* GetStaticText31() { return m_staticText31; }
    wxSpinCtrl* GetSpinCtrlPort() { return m_spinCtrlPort; }
    wxStaticText* GetStaticText35() { return m_staticText35; }
    wxSpinCtrl* GetSpinCtrl37() { return m_spinCtrl37; }
    wxCheckBox* GetCheckBox45() { return m_checkBox45; }
    wxCheckBox* GetCheckBoxProtectedMode() { return m_checkBoxProtectedMode; }
    ClusterPageBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(500,300), long style = wxTAB_TRAVERSAL);
    virtual ~ClusterPageBase();
};


class SettingsDlgBase : public wxDialog
{
protected:
    wxStaticText* m_staticText105;
    wxFilePickerCtrl* m_filePickerServer;
    wxStaticText* m_staticText109;
    wxFilePickerCtrl* m_filePickerCli;
    wxStdDialogButtonSizer* m_stdBtnSizer97;
    wxButton* m_button99;
    wxButton* m_button101;

protected:

public:
    wxStaticText* GetStaticText105() { return m_staticText105; }
    wxFilePickerCtrl* GetFilePickerServer() { return m_filePickerServer; }
    wxStaticText* GetStaticText109() { return m_staticText109; }
    wxFilePickerCtrl* GetFilePickerCli() { return m_filePickerCli; }
    SettingsDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Settings"), const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1,-1), long style = wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);
    virtual ~SettingsDlgBase();
};

#endif
